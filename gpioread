#! /usr/bin/env python3
# 2021-03-23
"""
Read all GPIO
This version for Pi.GPIO - an enhanced RPi.GPIO
This can be downloaded using git clone https://github.com/Milliways2/Pi.GPIO.git
Code and constants imported from gpioread.py
"""
import sys, os, time
import Pi.GPIO as GPIO
import gpioread
from gpioread import *

def get_pull(g):
    """
    Determine "pull" of GPIO
    """
    pud = get_pullupdn(g)
    if(pud == 1): return('IN ^')
    if(pud == 2): return('IN v')
    return('IN')

def pin_state(g):
    """
    Return GPIO state for BCM g as tuple(Name, Mode, Value)
    """
    mode = get_alt(g)
    modename = MODES[mode]
    if(mode==0 and pi4):  # Input on Pi4
        try:
            modename = get_pull(g)  # modifies NAME to show pull
        except:
            modename = 'IN' # no pull found
    if(mode<2): # i.e. IN or OUT
        name = 'GPIO{}'.format(g)
    else:
        name = FUNCTION[MODES[mode]][g]
    return name, modename, read_gpio(g)

def main():
    global pi4
    global get_pullupdn, get_alt, read_gpio

    # module independent references
    get_alt = GPIO.get_alt
    read_gpio =  GPIO.read_gpio
    get_pullupdn = GPIO.get_pullupdn
    GPIO.setmode(GPIO.BCM)

    rev = int(GPIO.RPI_INFO['REVISION'], 16)
    TYPE = (rev&0x00000FF0)>>4
    pi4 = TYPE>16
    # ensure gpioread globals are initialised
    gpioread.rev = rev
    gpioread.TYPE = TYPE

    print_gpio(pin_state)   # call gpioread.print_gpio() using local pin_state())

if __name__ == '__main__':
	main()
